import random
from datetime import datetime

class AIService:
    def __init__(self):
        self.agent_responses = {
            'standard': {
                'greeting': '안녕하세요! 스탠다드 버디입니다. 투자 입문자를 위한 기본 가이드를 제공해드릴게요.',
                'topics': {
                    '오늘의 3줄 리포트': '오늘의 3줄 리포트를 기본 투자 관점에서 정리해드릴게요:\n\n1. 📈 주요 지수 현황 - 코스피/나스닥/달러지수 등 시장 온도체크\n2. 📚 ETF/주식 기초 - 용어 1개만 쏙! (PER·ETF·분산)\n3. 🛡️ 리스크 관리 - 목표비중/손절 기준 미리 정하기',
                    '섹터 로테이션': '현재 섹터 로테이션을 기본 관점에서 분석해보면, 안정적인 대형주와 ETF에 집중하는 것이 좋겠어요.',
                    '리스크 체크': '기본적인 리스크 관리 전략은 분산투자와 적정 비중 유지에 기반합니다.',
                    '뉴스 요약': '최근 투자 관련 뉴스를 기본 관점에서 요약해드리면, 시장 안정성과 기본적인 투자 원칙에 관련된 뉴스들이 주목받고 있어요.',
                    '실전 학습 시나리오': '기본 투자 시나리오를 준비했어요. ETF 투자와 분산투자에 대한 실제 사례를 통해 학습해보세요.'
                }
            },
            'growth': {
                'greeting': '안녕하세요! 불꽃 호랑이입니다. 뜨거운 성장주에 올인하는 모험가형 투자를 도와드릴게요!',
                'topics': {
                    '오늘의 3줄 리포트': '오늘의 3줄 리포트를 성장주 관점에서 정리해드릴게요:\n\n1. 🔥 핫 섹터 Top3 - 반도체·AI·2차전지 등 단기 모멘텀\n2. 📅 실적/신제품 캘린더 - 이번 주 핵심 이벤트만 쏙 정리\n3. ⚡ 모멘텀 아이디어 - 단계적 진입·분할 매수 가이드',
                    '섹터 로테이션': '현재 섹터 로테이션을 성장주 관점에서 분석해보면, AI, 반도체, 2차전지 등 성장성이 높은 섹터에 집중하는 것이 좋겠어요.',
                    '리스크 체크': '성장주 투자의 리스크 관리는 높은 변동성을 감안한 포지션 사이징과 손절 기준 설정이 중요합니다.',
                    '뉴스 요약': '최근 투자 관련 뉴스를 성장주 관점에서 요약해드리면, 기술 혁신과 성장 스토리에 관련된 뉴스들이 주목받고 있어요.',
                    '실전 학습 시나리오': '성장주 투자 시나리오를 준비했어요. 모멘텀 투자와 성장성 분석에 대한 실제 사례를 통해 학습해보세요.'
                }
            },
            'dividend': {
                'greeting': '안녕하세요! 든든 올빼미입니다. 배당으로 매달 용돈 받는 안정형 투자를 도와드릴게요.',
                'topics': {
                    '오늘의 3줄 리포트': '오늘의 3줄 리포트를 배당주 관점에서 정리해드릴게요:\n\n1. 💰 이번 주 배당 일정 - 배당락/지급일 한눈에\n2. 📊 배당수익률 vs 금리 - 채권 금리와 비교해 매력도 점검\n3. 🏗️ 보수적 액션 제안 - 현금흐름 안정·분산 유지',
                    '섹터 로테이션': '현재 섹터 로테이션을 배당주 관점에서 분석해보면, 통신, 유틸리티, REITs 등 안정적인 배당을 제공하는 섹터에 집중하는 것이 좋겠어요.',
                    '리스크 체크': '배당주 투자의 리스크 관리는 배당 지속성과 현금흐름 안정성에 기반합니다.',
                    '뉴스 요약': '최근 투자 관련 뉴스를 배당주 관점에서 요약해드리면, 배당 정책과 현금흐름에 관련된 뉴스들이 주목받고 있어요.',
                    '실전 학습 시나리오': '배당주 투자 시나리오를 준비했어요. 배당 수익률 분석과 배당락 전략에 대한 실제 사례를 통해 학습해보세요.'
                }
            },
            'index': {
                'greeting': '안녕하세요! 거북이 플랜입니다. ETF 적립으로 느긋하게 장기투자를 도와드릴게요.',
                'topics': {
                    '오늘의 3줄 리포트': '오늘의 3줄 리포트를 ETF 관점에서 정리해드릴게요:\n\n1. 🧭 지수/ETF 스냅샷 - 일간·주간 성과 요약\n2. 🔄 리밸런싱 신호 - 규칙 기반 체크리스트\n3. 🐢 장기 분산 제안 - 적립/분할매수 권장',
                    '섹터 로테이션': '현재 섹터 로테이션을 ETF 관점에서 분석해보면, 시장 전체를 대표하는 지수 ETF에 집중하는 것이 좋겠어요.',
                    '리스크 체크': 'ETF 투자의 리스크 관리는 분산투자와 정기적인 리밸런싱에 기반합니다.',
                    '뉴스 요약': '최근 투자 관련 뉴스를 ETF 관점에서 요약해드리면, 시장 지수와 분산투자에 관련된 뉴스들이 주목받고 있어요.',
                    '실전 학습 시나리오': 'ETF 투자 시나리오를 준비했어요. 적립 투자와 리밸런싱 전략에 대한 실제 사례를 통해 학습해보세요.'
                }
            },
            'value': {
                'greeting': '안녕하세요! 가치 여우입니다. 숨은 보석 찾아 모으는 저평가 헌터 투자를 도와드릴게요.',
                'topics': {
                    '오늘의 3줄 리포트': '오늘의 3줄 리포트를 가치주 관점에서 정리해드릴게요:\n\n1. 💎 저평가 Top3 - 밸류 갭 큰 업종/종목\n2. 📉 PER/PB & 안전마진 - 재무 vs 가격 괴리 체크\n3. 🦊 장기 보유 전략 - 가치 훼손 없으면 버티기',
                    '섹터 로테이션': '현재 섹터 로테이션을 가치주 관점에서 분석해보면, 금융, 산업재, 필수소비 등 저평가된 섹터에 집중하는 것이 좋겠어요.',
                    '리스크 체크': '가치주 투자의 리스크 관리는 안전마진 확보와 장기 보유 관점에 기반합니다.',
                    '뉴스 요약': '최근 투자 관련 뉴스를 가치주 관점에서 요약해드리면, 기업 가치와 저평가에 관련된 뉴스들이 주목받고 있어요.',
                    '실전 학습 시나리오': '가치주 투자 시나리오를 준비했어요. 밸류에이션 분석과 안전마진 계산에 대한 실제 사례를 통해 학습해보세요.'
                }
            },
            'quant': {
                'greeting': '안녕하세요! 룰 기반 까마귀입니다. 데이터와 규칙으로만 판단하는 이성형 투자를 도와드릴게요.',
                'topics': {
                    '오늘의 3줄 리포트': '오늘의 3줄 리포트를 퀀트 관점에서 정리해드릴게요:\n\n1. 📐 팩터 성과 스냅샷 - 가치·모멘텀·퀄리티 등\n2. 📊 룰 신호 - 진입/청산 트리거 체크\n3. ⚖️ 리스크 파리티 - 변동성 타겟팅으로 비중 조정',
                    '섹터 로테이션': '현재 섹터 로테이션을 퀀트 관점에서 분석해보면, 팩터 기반 전략에 따라 모멘텀, 퀄리티, 가치 팩터에 집중하는 것이 좋겠어요.',
                    '리스크 체크': '퀀트 투자의 리스크 관리는 통계적 모델과 백테스트 결과에 기반합니다.',
                    '뉴스 요약': '최근 투자 관련 뉴스를 퀀트 관점에서 요약해드리면, 데이터 분석과 알고리즘 투자에 관련된 뉴스들이 주목받고 있어요.',
                    '실전 학습 시나리오': '퀀트 투자 시나리오를 준비했어요. 팩터 분석과 백테스트에 대한 실제 사례를 통해 학습해보세요.'
                }
            },
            'esg': {
                'greeting': '안녕하세요! 초록 사슴입니다. 환경·사회도 챙기는 착한 투자를 도와드릴게요.',
                'topics': {
                    '오늘의 3줄 리포트': '오늘의 3줄 리포트를 ESG 관점에서 정리해드릴게요:\n\n1. 🌱 ESG 뉴스 Top3 - 환경·사회·지배구조 이슈\n2. 🔋 임팩트 ETF 흐름 - 그린/클린 에너지 ETF\n3. 🦌 ESG 점수 체크 - 포트폴리오 지속가능성 점검',
                    '섹터 로테이션': '현재 섹터 로테이션을 ESG 관점에서 분석해보면, 클린에너지, 탄소배출권, ESG 광범위 섹터에 집중하는 것이 좋겠어요.',
                    '리스크 체크': 'ESG 투자의 리스크 관리는 지속가능성과 장기적 관점에 기반합니다.',
                    '뉴스 요약': '최근 투자 관련 뉴스를 ESG 관점에서 요약해드리면, 환경 규제와 지속가능성에 관련된 뉴스들이 주목받고 있어요.',
                    '실전 학습 시나리오': 'ESG 투자 시나리오를 준비했어요. ESG 점수 분석과 임팩트 투자에 대한 실제 사례를 통해 학습해보세요.'
                }
            }
        }
    
    def generate_response(self, message, agent_id='standard', topic=''):
        """AI 응답 생성"""
        agent_responses = self.agent_responses.get(agent_id, self.agent_responses['standard'])
        
        if topic:
            # 토픽 기반 응답
            response = agent_responses['topics'].get(topic, '해당 주제에 대한 정보를 준비 중입니다.')
        elif message:
            # 일반 메시지 응답
            if any(keyword in message.lower() for keyword in ['안녕', 'hello', 'hi']):
                response = agent_responses['greeting']
            elif any(keyword in message.lower() for keyword in ['리포트', 'report']):
                response = agent_responses['topics']['오늘의 3줄 리포트']
            elif any(keyword in message.lower() for keyword in ['섹터', 'sector']):
                response = agent_responses['topics']['섹터 로테이션']
            elif any(keyword in message.lower() for keyword in ['리스크', 'risk']):
                response = agent_responses['topics']['리스크 체크']
            elif any(keyword in message.lower() for keyword in ['뉴스', 'news']):
                response = agent_responses['topics']['뉴스 요약']
            elif any(keyword in message.lower() for keyword in ['실습', 'practice']):
                response = agent_responses['topics']['실전 학습 시나리오']
            else:
                # 일반적인 응답
                responses = [
                    f"{agent_responses['greeting']} {message}에 대해 더 자세히 알고 싶으시다면 구체적인 질문을 해주세요.",
                    f"좋은 질문이네요! {message}에 대해서는 저희 {agent_id} 관점에서 분석해드릴 수 있어요.",
                    f"{message}에 대한 답변을 드리기 위해 더 구체적인 정보가 필요할 것 같아요."
                ]
                response = random.choice(responses)
        else:
            response = agent_responses['greeting']
        
        return response
    
    def get_topic_suggestions(self, agent_id='standard'):
        """토픽 제안"""
        agent_responses = self.agent_responses.get(agent_id, self.agent_responses['standard'])
        return list(agent_responses['topics'].keys())
